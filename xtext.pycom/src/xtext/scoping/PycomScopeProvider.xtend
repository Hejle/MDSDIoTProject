/*
 * generated by Xtext 2.16.0
 */
package xtext.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import xtext.pycom.PycomPackage.Literals
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.scoping.Scopes
import xtext.pycom.FunctionCall
import xtext.pycom.FunctionDefinitions
import javax.swing.JOptionPane
import xtext.pycom.Board

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class PycomScopeProvider extends AbstractPycomScopeProvider {

	override getScope(EObject context, EReference reference) {
		if(context instanceof FunctionCall && reference == Literals.FUNCTION_CALL__FUNCTION){
			var Board board;
			if((context as FunctionCall).board !== null) {
				board = (context as FunctionCall).board
			} else if(EcoreUtil2.getContainerOfType(context, Board) instanceof Board) {
				board = EcoreUtil2.getContainerOfType(context, Board) as Board	
			} else {
				return super.getScope(context, reference);
			}	
			if(board.hardware !== null && board.hardware.function !== null)	{
				var hardware = board.hardware.function
				var candidates = EcoreUtil2.getAllContentsOfType(hardware, FunctionDefinitions)	
				return Scopes.scopeFor(candidates);
			}
		}
		return super.getScope(context, reference)
		
	}

}
