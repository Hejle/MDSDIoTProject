/*
 * generated by Xtext 2.16.0
 */
package xtext.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import xtext.pycom.PycomPackage.Literals
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.scoping.Scopes
import xtext.pycom.ModuleFunction
import xtext.pycom.ModuleType

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class PycomScopeProvider extends AbstractPycomScopeProvider {

	override getScope(EObject context, EReference reference) {
		if(context instanceof ModuleFunction && reference == Literals.MODULE_FUNCTION__MODULE_TYPE){
			val board = (context as ModuleFunction).board
			val candidates = EcoreUtil2.getAllContentsOfType(board, ModuleType)			
			return Scopes.scopeFor(candidates);
		}
		
		return super.getScope(context, reference)
	}

}
